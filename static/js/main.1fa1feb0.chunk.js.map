{"version":3,"sources":["firebase.js","componentes/create.js","componentes/delete.js","componentes/update.js","componentes/read.js","componentes/tabs.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Create","props","useForm","register","errors","handleSubmit","add_firebase","data","a","db","firestore","collection","add","res","id","addUser","console","log","onSubmit","e","preventDefault","target","reset","className","placeholder","name","ref","required","value","message","maxLength","minLength","lastname","type","Delete","scope","list","map","user","index","key","onClick","deleteUser","Update","u","useState","setUser","update_firebase","doc","update","updateUser","defaultValue","Read","Tabs","role","data-toggle","href","aria-controls","aria-selected","App","users","setUsers","useEffect","get","arrayData","docs","obtenerDatos","delete_firebase","delete","filter","item","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fa1feb0.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCBh9rMLMENTYI3T5go4RBRhAeYJu0uqWc\",\r\n    authDomain: \"react-crud-1d391.firebaseapp.com\",\r\n    databaseURL: \"https://react-crud-1d391.firebaseio.com\",\r\n    projectId: \"react-crud-1d391\",\r\n    storageBucket: \"react-crud-1d391.appspot.com\",\r\n    messagingSenderId: \"526995591629\",\r\n    appId: \"1:526995591629:web:1f0169c2a3a9b84dd17484\",\r\n    measurementId: \"G-G3Z0DP68H7\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport {firebase};","import React, { Fragment } from 'react';\r\nimport { useForm } from 'react-hook-form'  //mediante npm install react-hook-form\r\nimport { firebase } from '../firebase'\r\n\r\n\r\nconst Create = (props) => {\r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault()\r\n        add_firebase(data)\r\n        e.target.reset()\r\n    }\r\n\r\n    const add_firebase = async (data) => {\r\n        try {\r\n            const db = firebase.firestore()\r\n            const res = await db.collection('tareas').add(data)\r\n            data.id = res.id\r\n            props.addUser(data)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        placeholder=\"Ingrese nombre de usuario\"\r\n                        className=\"form-control\"\r\n                        name=\"name\"\r\n                        ref={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Nombre es requerido'\r\n                            },\r\n                            maxLength: {\r\n                                value: 10,\r\n                                message: 'No más de 5 carácteres!'\r\n                            },\r\n                            minLength: {\r\n                                value: 4,\r\n                                message: 'Mínimo 2 carácteres'\r\n                            }\r\n                        })}\r\n                    ></input>\r\n                    <span className=\"text-danger text-small d-block mb-2\">\r\n                        {errors?.name?.message}\r\n                    </span>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        placeholder=\"Ingrese apellido de usuario\"\r\n                        className=\"form-control\"\r\n                        name=\"lastname\"\r\n                        ref={register({\r\n                            required: {\r\n                                value: true,\r\n                                message: 'Apellido es requerido'\r\n                            },\r\n                            maxLength: {\r\n                                value: 10,\r\n                                message: 'No más de 5 carácteres!'\r\n                            },\r\n                            minLength: {\r\n                                value: 4,\r\n                                message: 'Mínimo 2 carácteres'\r\n                            }\r\n                        })}\r\n                    ></input>\r\n                    <span className=\"text-danger text-small d-block mb-2\">\r\n                        {errors?.lastname?.message}\r\n                    </span>\r\n                </div>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-send\">\r\n                    Agregar\r\n                                    </button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Create;","import React, { Fragment } from 'react';\r\nconst Delete = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">LastName</th>\r\n                        <th scope=\"col\">-</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.list.map((user, index) =>\r\n\r\n                        <tr key={user.id} >\r\n                            <td>{user.name}</td>\r\n                            <td>{user.lastname}</td>\r\n                            <td>\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-send\"\r\n                                    onClick={()=>props.deleteUser(user)}>\r\n                                    Eliminar\r\n                                    </button>\r\n                            </td>\r\n                        </tr>)}\r\n                </tbody>\r\n            </table>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Delete;","import React, { Fragment, useState } from 'react';\r\nimport { useForm } from 'react-hook-form'  //mediante npm install react-hook-form\r\nimport { firebase } from '../firebase'\r\n\r\n\r\nconst Update = (props) => {\r\n    const { register, errors, handleSubmit } = useForm();\r\n    const u = {\r\n        id: '',\r\n        name: '',\r\n        lastname: ''\r\n    }\r\n    const [user, setUser] = useState(u)\r\n\r\n    const userSelected = (data) => {\r\n        setUser(data)\r\n    }\r\n\r\n    const onSubmit = (data, e) => {\r\n        e.preventDefault()\r\n        data.id = user.id\r\n        update_firebase(data)\r\n        e.target.reset()\r\n    }\r\n\r\n    const update_firebase = async (data) => {\r\n        try {\r\n            const db = firebase.firestore()\r\n            await db.collection('tareas').doc(data.id).update({\r\n                name: data.name,\r\n                lastname: data.lastname\r\n            })\r\n            props.updateUser(data)\r\n            setUser(u)\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                placeholder=\"Ingrese nombre de usuario\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                defaultValue={user.name}\r\n                                ref={register({\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Nombre es requerido'\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 10,\r\n                                        message: 'No más de 5 carácteres!'\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 4,\r\n                                        message: 'Mínimo 2 carácteres'\r\n                                    }\r\n                                })}\r\n                            ></input>\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                                {errors?.name?.message}\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                placeholder=\"Ingrese apellido de usuario\"\r\n                                className=\"form-control\"\r\n                                name=\"lastname\"\r\n                                defaultValue={user.lastname}\r\n                                ref={register({\r\n                                    required: {\r\n                                        value: true,\r\n                                        message: 'Apellido es requerido'\r\n                                    },\r\n                                    maxLength: {\r\n                                        value: 10,\r\n                                        message: 'No más de 5 carácteres!'\r\n                                    },\r\n                                    minLength: {\r\n                                        value: 4,\r\n                                        message: 'Mínimo 2 carácteres'\r\n                                    }\r\n                                })}\r\n                            ></input>\r\n                            <span className=\"text-danger text-small d-block mb-2\">\r\n                                {errors?.lastname?.message}\r\n                            </span>\r\n                        </div>\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-send\">\r\n                            Actualizar\r\n                                    </button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <table className=\"table table-striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Name</th>\r\n                                <th scope=\"col\">LastName</th>\r\n                                <th scope=\"col\">-</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {props.list.map((user, index) =>\r\n\r\n                                <tr key={user.id} >\r\n                                    <td>{user.name}</td>\r\n                                    <td>{user.lastname}</td>\r\n                                    <td>\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-send\"\r\n                                            onClick={() => userSelected(user)}>\r\n                                            Editar\r\n                                    </button>\r\n                                    </td>\r\n                                </tr>)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Update;","import React, { Fragment } from 'react';\r\n\r\nconst Read = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <table className=\"table table-striped\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Name</th>\r\n                        <th scope=\"col\">LastName</th>\r\n                        <th scope=\"col\">-</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.list.map((user, index) =>\r\n\r\n                        <tr key={user.id} >\r\n                            <th scope=\"row\">{user.id}</th>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.lastname}</td>\r\n                            <td>\r\n                            </td>\r\n                        </tr>)}\r\n                </tbody>\r\n            </table>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Read;","import React, { Fragment } from 'react';\r\n\r\nconst Tabs = () => {\r\n    return (\r\n        <Fragment>\r\n            <nav>\r\n                <div className=\"nav nav-tabs nav-fill\" id=\"nav-tab\" role=\"tablist\">\r\n                    <a className=\"nav-item nav-link active\" id=\"nav-add-tab\" data-toggle=\"tab\" href=\"#nav-add\" \r\n                    role=\"tab\" aria-controls=\"nav-add\" aria-selected=\"true\">Agregar</a>\r\n                    <a className=\"nav-item nav-link\" id=\"nav-update-tab\" data-toggle=\"tab\" href=\"#nav-update\" \r\n                    role=\"tab\" aria-controls=\"nav-update\" aria-selected=\"false\">Actualizar</a>\r\n                    <a className=\"nav-item nav-link\" id=\"nav-delete-tab\" data-toggle=\"tab\" href=\"#nav-delete\" \r\n                    role=\"tab\" aria-controls=\"nav-delete\" aria-selected=\"false\">Eliminar</a>\r\n                    <a className=\"nav-item nav-link\" id=\"nav-list-tab\" data-toggle=\"tab\" href=\"#nav-list\" \r\n                    role=\"tab\" aria-controls=\"nav-list\" aria-selected=\"false\">Listar</a>\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Tabs;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport Create from './componentes/create'\nimport Delete from './componentes/delete'\nimport Update from './componentes/update'\nimport Read from './componentes/read'\nimport Tabs from './componentes/tabs';\nimport { firebase } from './firebase'\n\n\nfunction App() {\n\n  const [user, setUser] = useState()\n  const [users, setUsers] = useState([])\n\n  useEffect(() => {\n    const db = firebase.firestore()\n    const obtenerDatos = async () => {\n      try {\n        const data = await db.collection('tareas').get()\n        const arrayData = data.docs.map(doc => ({ id: doc.id, ...doc.data() }))\n        setUsers(arrayData)\n      } catch (error) {\n      }\n    }\n    obtenerDatos()\n  }, [])\n\n  const addUser = (user) => {\n    setUsers([\n      ...users,\n      user\n    ])\n  }\n\n  const deleteUser = (user) => {\n    setUser(user)\n    delete_firebase()\n  }\n\n  const delete_firebase = async () => {\n    const db = firebase.firestore()\n\n    try {\n      await db.collection('tareas').doc(user.id).delete()\n      setUsers(users.filter(item => item.id !== user.id))\n      setUser()\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  const updateUser = (user) => {\n    setUsers(users.map(item => (\n      item.id === user.id ? user : item\n    )))\n  }\n\n  return (\n    <div className=\"App\">\n      <section id=\"tabs\" className=\"project-tab\">\n        <div className=\"container\">\n          <div className=\"row justify-content-center p-3\">\n            <h1 className=\"text\">Gestión de usuarios con pestañas</h1>\n            <div className=\"col-md-9 p-5 frame-color\">\n              <Tabs></Tabs>\n              <br />\n              <div className=\"tab-content\" id=\"nav-tabContent\">\n                <div className=\"tab-pane fade show active\" id=\"nav-add\" role=\"tabpanel\" aria-labelledby=\"nav-add-tab\">\n                  <Create addUser={addUser}></Create>\n                </div>\n                <div className=\"tab-pane fade\" id=\"nav-update\" role=\"tabpanel\" aria-labelledby=\"nav-update-tab\">\n                  <Update list={users} updateUser={updateUser}></Update>\n                </div>\n                <div className=\"tab-pane fade\" id=\"nav-delete\" role=\"tabpanel\" aria-labelledby=\"nav-delete-tab\">\n                  <Delete list={users} deleteUser={deleteUser}></Delete>\n                </div>\n                <div className=\"tab-pane fade\" id=\"nav-list\" role=\"tabpanel\" aria-labelledby=\"nav-list-tab\">\n                  <Read list={users}></Read>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}